import OpenAI from 'openai';

// Configura√ß√£o da OpenAI
const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

export interface AIReportData {
  id: string;
  title: string;
  content: string;
  summary: string;
  marketScenario: string;
  mainNews: string[];
  holidays: string[];
  potentialImpact: string;
  trendAnalysis: string;
  createdAt: Date;
  type: 'RADAR_DA_AGUIA' | 'TRADE_ANALYSIS' | 'MARKET_UPDATE';
}

export interface MarketData {
  btcPrice: number;
  ethPrice: number;
  marketCap: number;
  volume24h: number;
  dominance: number;
  fearGreedIndex: number;
  trending: string[];
}

export interface TradeAnalysis {
  symbol: string;
  action: 'buy' | 'sell' | 'hold';
  confidence: number;
  reasoning: string;
  entryPoint: number;
  stopLoss: number;
  takeProfit: number;
  riskLevel: 'low' | 'medium' | 'high';
}

export class AIService {
  
  // Gerar relat√≥rio RADAR DA √ÅGUIA NEWS
  async generateRadarDaAguiaReport(marketData: MarketData): Promise<AIReportData> {
    try {
      const prompt = `
        Como analista especialista em criptomoedas, gere um relat√≥rio completo no formato RADAR DA √ÅGUIA NEWS com as seguintes informa√ß√µes:

        DADOS DE MERCADO:
        - Bitcoin: $${marketData.btcPrice.toLocaleString()}
        - Ethereum: $${marketData.ethPrice.toLocaleString()}
        - Market Cap Total: $${marketData.marketCap.toLocaleString()}
        - Volume 24h: $${marketData.volume24h.toLocaleString()}
        - Domin√¢ncia BTC: ${marketData.dominance}%
        - Fear & Greed Index: ${marketData.fearGreedIndex}
        - Trending: ${marketData.trending.join(', ')}

        FORMATO OBRIGAT√ìRIO:
        
        ü¶Ö **RADAR DA √ÅGUIA NEWS** ü¶Ö
        üìÖ ${new Date().toLocaleDateString('pt-BR')} - ${new Date().toLocaleTimeString('pt-BR')}

        üìä **CEN√ÅRIO DO MERCADO:**
        [An√°lise detalhada do cen√°rio atual em 2-3 par√°grafos]

        üì∞ **PRINCIPAIS NOT√çCIAS:**
        ‚Ä¢ [Not√≠cia 1 com impacto no mercado]
        ‚Ä¢ [Not√≠cia 2 com impacto no mercado]
        ‚Ä¢ [Not√≠cia 3 com impacto no mercado]
        ‚Ä¢ [Not√≠cia 4 com impacto no mercado]

        üèõÔ∏è **FERIADOS E EVENTOS:**
        ‚Ä¢ [Eventos econ√¥micos importantes da semana]
        ‚Ä¢ [Feriados que podem afetar o volume]
        ‚Ä¢ [Releases importantes de dados econ√¥micos]

        üéØ **IMPACTO POTENCIAL:**
        [An√°lise de como os eventos podem influenciar as criptomoedas - 1 par√°grafo]

        üìà **AN√ÅLISE DE TEND√äNCIAS:**
        [An√°lise t√©cnica e fundamental das principais criptomoedas - 2 par√°grafos]

        ‚ö° **RESUMO EXECUTIVO:**
        [Resumo em 3-4 linhas das principais oportunidades e riscos]

        Use linguagem profissional mas acess√≠vel. Seja espec√≠fico nas an√°lises e cite n√∫meros quando relevante.
      `;

      const completion = await openai.chat.completions.create({
        model: "gpt-4",
        messages: [
          {
            role: "system",
            content: "Voc√™ √© um analista especialista em criptomoedas com 10+ anos de experi√™ncia em mercados financeiros. Sua especialidade √© identificar oportunidades e riscos atrav√©s de an√°lise t√©cnica e fundamental."
          },
          {
            role: "user",
            content: prompt
          }
        ],
        temperature: 0.7,
        max_tokens: 2000
      });

      const content = completion.choices[0]?.message?.content || '';
      
      // Extrair se√ß√µes do relat√≥rio
      const marketScenario = this.extractSection(content, 'CEN√ÅRIO DO MERCADO');
      const mainNews = this.extractList(content, 'PRINCIPAIS NOT√çCIAS');
      const holidays = this.extractList(content, 'FERIADOS E EVENTOS');
      const potentialImpact = this.extractSection(content, 'IMPACTO POTENCIAL');
      const trendAnalysis = this.extractSection(content, 'AN√ÅLISE DE TEND√äNCIAS');
      const summary = this.extractSection(content, 'RESUMO EXECUTIVO');

      return {
        id: `radar_${Date.now()}`,
        title: `RADAR DA √ÅGUIA NEWS - ${new Date().toLocaleDateString('pt-BR')}`,
        content,
        summary,
        marketScenario,
        mainNews,
        holidays,
        potentialImpact,
        trendAnalysis,
        createdAt: new Date(),
        type: 'RADAR_DA_AGUIA'
      };
    } catch (error) {
      console.error('Erro ao gerar relat√≥rio RADAR DA √ÅGUIA:', error);
      throw new Error('Erro ao gerar relat√≥rio de IA');
    }
  }

  // Analisar opera√ß√£o de trade com IA
  async analyzeTradeResult(
    symbol: string,
    entryPrice: number,
    exitPrice: number,
    result: 'profit' | 'loss',
    marketConditions: string
  ): Promise<string> {
    try {
      const prompt = `
        Como especialista em trading de criptomoedas, analise esta opera√ß√£o e forne√ßa insights:

        DADOS DA OPERA√á√ÉO:
        - Par: ${symbol}
        - Pre√ßo de Entrada: $${entryPrice}
        - Pre√ßo de Sa√≠da: $${exitPrice}
        - Resultado: ${result === 'profit' ? 'LUCRO' : 'PREJU√çZO'}
        - Varia√ß√£o: ${(((exitPrice - entryPrice) / entryPrice) * 100).toFixed(2)}%
        - Condi√ß√µes do Mercado: ${marketConditions}

        FORNE√áA UMA AN√ÅLISE DETALHADA EM 3 PAR√ÅGRAFOS:
        1. O que aconteceu na opera√ß√£o e por qu√™
        2. An√°lise t√©cnica do movimento do pre√ßo
        3. Li√ß√µes aprendidas e melhorias para pr√≥ximas opera√ß√µes

        Use linguagem clara e educativa. ${result === 'loss' ? 'Foque em aprendizado e melhorias.' : 'Destaque os fatores de sucesso.'}
      `;

      const completion = await openai.chat.completions.create({
        model: "gpt-4",
        messages: [
          {
            role: "system",
            content: "Voc√™ √© um mentor experiente em trading de criptomoedas, especialista em an√°lise post-trade e educa√ß√£o financeira."
          },
          {
            role: "user",
            content: prompt
          }
        ],
        temperature: 0.6,
        max_tokens: 800
      });

      return completion.choices[0]?.message?.content || 'An√°lise n√£o dispon√≠vel';
    } catch (error) {
      console.error('Erro ao analisar trade:', error);
      return 'Erro ao gerar an√°lise da opera√ß√£o';
    }
  }

  // Gerar an√°lise de mercado personalizada
  async generateMarketAnalysis(
    symbols: string[],
    timeframe: '1h' | '4h' | '1d',
    userLevel: 'beginner' | 'intermediate' | 'advanced'
  ): Promise<string> {
    try {
      const prompt = `
        Gere uma an√°lise de mercado personalizada para um trader ${userLevel} sobre os seguintes ativos:
        ${symbols.join(', ')}

        Timeframe: ${timeframe}
        
        ESTRUTURA DA AN√ÅLISE:
        1. Overview do mercado atual
        2. An√°lise individual de cada ativo
        3. Oportunidades identificadas
        4. Gest√£o de risco recomendada
        5. Plano de a√ß√£o sugerido

        Adapte a linguagem para o n√≠vel do usu√°rio:
        - Beginner: Explica√ß√µes b√°sicas, foco em educa√ß√£o
        - Intermediate: An√°lise t√©cnica moderada, alguns indicadores
        - Advanced: An√°lise completa, m√∫ltiplos indicadores, correla√ß√µes

        Seja espec√≠fico e acion√°vel.
      `;

      const completion = await openai.chat.completions.create({
        model: "gpt-4",
        messages: [
          {
            role: "system",
            content: "Voc√™ √© um analista quantitativo especializado em criptomoedas, capaz de adaptar an√°lises para diferentes n√≠veis de experi√™ncia."
          },
          {
            role: "user",
            content: prompt
          }
        ],
        temperature: 0.7,
        max_tokens: 1500
      });

      return completion.choices[0]?.message?.content || 'An√°lise n√£o dispon√≠vel';
    } catch (error) {
      console.error('Erro ao gerar an√°lise de mercado:', error);
      return 'Erro ao gerar an√°lise de mercado';
    }
  }

  // Gerar sugest√£o de trade
  async generateTradeRecommendation(
    symbol: string,
    currentPrice: number,
    marketData: Partial<MarketData>
  ): Promise<TradeAnalysis> {
    try {
      const prompt = `
        Como analista quantitativo, forne√ßa uma recomenda√ß√£o de trade para:
        
        Par: ${symbol}
        Pre√ßo Atual: $${currentPrice}
        Market Cap: $${marketData.marketCap?.toLocaleString() || 'N/A'}
        Volume 24h: $${marketData.volume24h?.toLocaleString() || 'N/A'}
        Fear & Greed: ${marketData.fearGreedIndex || 'N/A'}

        RESPONDA NO FORMATO JSON:
        {
          "action": "buy/sell/hold",
          "confidence": 0-100,
          "reasoning": "explica√ß√£o detalhada da recomenda√ß√£o",
          "entryPoint": pre√ßo_de_entrada,
          "stopLoss": pre√ßo_stop_loss,
          "takeProfit": pre√ßo_take_profit,
          "riskLevel": "low/medium/high"
        }

        Base sua an√°lise em:
        - Condi√ß√µes t√©cnicas atuais
        - Momentum do mercado
        - Gest√£o de risco apropriada
        - Cen√°rio macro
      `;

      const completion = await openai.chat.completions.create({
        model: "gpt-4",
        messages: [
          {
            role: "system",
            content: "Voc√™ √© um trader quantitativo experiente que sempre prioriza gest√£o de risco. Forne√ßa respostas apenas em JSON v√°lido."
          },
          {
            role: "user",
            content: prompt
          }
        ],
        temperature: 0.5,
        max_tokens: 500
      });

      const response = completion.choices[0]?.message?.content || '{}';
      const analysis = JSON.parse(response);

      return {
        symbol,
        action: analysis.action || 'hold',
        confidence: analysis.confidence || 50,
        reasoning: analysis.reasoning || 'An√°lise n√£o dispon√≠vel',
        entryPoint: analysis.entryPoint || currentPrice,
        stopLoss: analysis.stopLoss || currentPrice * 0.95,
        takeProfit: analysis.takeProfit || currentPrice * 1.05,
        riskLevel: analysis.riskLevel || 'medium'
      };
    } catch (error) {
      console.error('Erro ao gerar recomenda√ß√£o de trade:', error);
      return {
        symbol,
        action: 'hold',
        confidence: 0,
        reasoning: 'Erro ao gerar recomenda√ß√£o',
        entryPoint: currentPrice,
        stopLoss: currentPrice * 0.95,
        takeProfit: currentPrice * 1.05,
        riskLevel: 'high'
      };
    }
  }

  // Fun√ß√µes auxiliares para extrair se√ß√µes do relat√≥rio
  private extractSection(content: string, sectionName: string): string {
    const regex = new RegExp(`\\*\\*${sectionName}:\\*\\*\\s*([\\s\\S]*?)(?=\\*\\*|$)`, 'i');
    const match = content.match(regex);
    return match ? match[1].trim() : '';
  }

  private extractList(content: string, sectionName: string): string[] {
    const section = this.extractSection(content, sectionName);
    const items = section.split('‚Ä¢').filter(item => item.trim().length > 0);
    return items.map(item => item.trim());
  }

  // Resumir texto longo
  async summarizeText(text: string, maxLength: number = 200): Promise<string> {
    try {
      const prompt = `
        Resuma o seguinte texto em no m√°ximo ${maxLength} caracteres, mantendo as informa√ß√µes mais importantes:

        ${text}
      `;

      const completion = await openai.chat.completions.create({
        model: "gpt-3.5-turbo",
        messages: [
          {
            role: "user",
            content: prompt
          }
        ],
        temperature: 0.3,
        max_tokens: Math.ceil(maxLength / 3)
      });

      return completion.choices[0]?.message?.content || text.substring(0, maxLength);
    } catch (error) {
      console.error('Erro ao resumir texto:', error);
      return text.substring(0, maxLength);
    }
  }
}

// Inst√¢ncia singleton do servi√ßo
export const aiService = new AIService();

// Fun√ß√£o para validar se a API est√° configurada
export function isAIConfigured(): boolean {
  return !!process.env.OPENAI_API_KEY;
}

// Fun√ß√£o para estimar custos de tokens
export function estimateTokenCost(text: string): number {
  // Estimativa aproximada: 1 token ‚âà 4 caracteres
  const tokens = Math.ceil(text.length / 4);
  // GPT-4: $0.03 per 1K tokens input, $0.06 per 1K tokens output
  return (tokens / 1000) * 0.045; // M√©dia entre input e output
}
